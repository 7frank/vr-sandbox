/* eslint-disable */!(function (e) { if (typeof exports == 'object' && typeof module != 'undefined')module.exports = e(); else if (typeof define == 'function' && define.amd)define([], e); else { (typeof window != 'undefined' ? window : typeof global != 'undefined' ? global : typeof self != 'undefined' ? self : this).sjTerraGras = e(); } }(function () { return (function e (t, n, r) { function o (u, i) { if (!n[u]) { if (!t[u]) { var f = typeof require == 'function' && require; if (!i && f) return f(u, !0); if (a) return a(u, !0); var c = new Error("Cannot find module '" + u + "'"); throw c.code = 'MODULE_NOT_FOUND', c; } var y = n[u] = {exports: {}}; t[u][0].call(y.exports, function (e) { var n = t[u][1][e]; return o(n || e); }, y, y.exports, e, t, n, r); } return n[u].exports; } for (var a = typeof require == 'function' && require, u = 0; u < r.length; u++)o(r[u]); return o; }({1: [function (e, t, n) { 'use strict'; function r (e) { return e > 0 ? 1 : e < 0 ? -1 : 0; } function o (e, t) { return (e % t + t) % t; }Object.defineProperty(n, '__esModule', {value: !0}), n.PI2 = 2 * Math.PI, n.sign = r, n.roundFrac = function (e, t) { var n = Math.pow(10, t); return Math.round((e + 1e-9) * n) / n; }, n.clamp = function (e, t, n) { return Math.min(Math.max(e, t), n); }, n.pmod = o, n.nrand = function () { return 2 * Math.random() - 1; }, n.angle = function (e, t) { return o(Math.atan2(t, e), n.PI2); }, n.difAngle = function (e, t) { var a = o(t, n.PI2) - o(e, n.PI2); return Math.abs(a) < Math.PI ? a : a - n.PI2 * r(a); }, n.dot = function (e, t, n, r) { return e * n + t * r; }; }, {}], 2: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', {value: !0}); var r = e('./gmath'), o = e('./vec'), a = e('./simplex'), u = 4, i = 2 * (u + 1), f = 12 * u; n.createMesh = function (e) { var t = {vindex: new Float32Array(2 * i * 1), shape: new Float32Array(4 * e.numBlades), offset: new Float32Array(4 * e.numBlades), index: new Uint16Array(f)}; !(function (e, t, n, r) { var o; for (o = 0; o < u; ++o)e[r++] = t + 0, e[r++] = t + 1, e[r++] = t + 2, e[r++] = t + 2, e[r++] = t + 1, e[r++] = t + 3, t += 2; for (o = 0; o < u; ++o)e[r++] = n + 2, e[r++] = n + 1, e[r++] = n + 0, e[r++] = n + 3, e[r++] = n + 1, e[r++] = n + 2, n += 2; }(t.index, 0, i, 0)), (function (e, t, n) { for (var o = 0; o < t; ++o)e[4 * o + 0] = r.nrand() * n, e[4 * o + 1] = r.nrand() * n, e[4 * o + 2] = 0, e[4 * o + 3] = 2 * Math.PI * Math.random(); }(t.offset, e.numBlades, e.radius)), (function (e, t, n, r, o, u) { for (var i = 0, f = 0; f < t; ++f)i = Math.abs(a.default(0.03 * n[4 * f + 0], 0.03 * n[4 * f + 1])), i *= i * i, i *= 5, e[4 * f + 0] = r + Math.random() * r * 0.5, e[4 * f + 1] = o + Math.pow(Math.random(), 4) * (u - o) + i, e[4 * f + 2] = 0 + 0.3 * Math.random(), e[4 * f + 3] = 0.05 + 0.3 * Math.random(); }(t.shape, e.numBlades, t.offset, e.BLADE_WIDTH, e.BLADE_HEIGHT_MIN, e.BLADE_HEIGHT_MAX)), (function (e) { for (var t = 0; t < e.length; ++t)e[t] = t; }(t.vindex)); var n = new THREE.InstancedBufferGeometry(); n.boundingSphere = new THREE.Sphere(new THREE.Vector3(0, 0, 0), 1e4 * Math.sqrt(e.radius * e.radius * 2)), n.addAttribute('vindex', new THREE.BufferAttribute(t.vindex, 1)), n.addAttribute('shape', new THREE.InstancedBufferAttribute(t.shape, 4)), n.addAttribute('offset', new THREE.InstancedBufferAttribute(t.offset, 4)), n.setIndex(new THREE.BufferAttribute(t.index, 1)); var c = e.texture; c.wrapS = c.wrapT = THREE.RepeatWrapping; var y = e.heightMap; y.wrapS = y.wrapT = THREE.RepeatWrapping; var s = e.heightMapScale, d = o.Vec3.clone(e.lightDir); d.z *= 0.5, o.Vec3.normalize(d, d); var l = e.vertScript.replace('%%BLADE_HEIGHT_TALL%%', (1.5 * e.BLADE_HEIGHT_MAX).toFixed(1)).replace('%%BLADE_SEGS%%', u.toFixed(1)).replace('%%PATCH_SIZE%%', (2 * e.radius).toFixed(1)).replace('%%TRANSITION_LOW%%', e.transitionLow.toString()).replace('%%TRANSITION_HIGH%%', e.transitionHigh.toString()), p = new THREE.RawShaderMaterial({uniforms: {lightDir: {type: '3f', value: o.Vec3.toArray(d)}, time: {type: 'f', value: 0}, map: {type: 't', value: c}, heightMap: {type: 't', value: y}, heightMapScale: {type: '3f', value: [s.x, s.y, s.z]}, camDir: {type: '3f', value: [1, 0, 0]}, drawPos: {type: '2f', value: [100, 0]}, fogColor: {type: '3f', value: o.Color.toArray(e.fogColor)}, fogNear: {type: 'f', value: 1}, fogFar: {type: 'f', value: e.fogFar}, grassColor: {type: '3f', value: o.Color.toArray(e.grassColor)}, grassFogFar: {type: 'f', value: e.grassFogFar}, windIntensity: {type: 'f', value: e.windIntensity}}, vertexShader: l, fragmentShader: e.fragScript, transparent: !0}), h = new THREE.Mesh(n, p); return h.frustumCulled = !1, h; }, n.update = function (e, t, n, r, o) { var a = e.material; a.uniforms.time.value = t; var u = a.uniforms.camDir.value; u[0] = r.x, u[1] = r.y, u[2] = r.z, (u = a.uniforms.drawPos.value)[0] = o.x, u[1] = o.y; }; }, {'./gmath': 1, './simplex': 3, './vec': 4}], 3: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', {value: !0}); var r = (function () { function e (e, t, n) { this.x = e, this.y = t, this.z = n; } return e.prototype.dot2 = function (e, t) { return this.x * e + this.y * t; }, e.prototype.dot3 = function (e, t, n) { return this.x * e + this.y * t + this.z * n; }, e; }()), o = 0.5 * (Math.sqrt(3) - 1), a = (3 - Math.sqrt(3)) / 6, u = new Array(512), i = new Array(512), f = [new r(1, 1, 0), new r(-1, 1, 0), new r(1, -1, 0), new r(-1, -1, 0), new r(1, 0, 1), new r(-1, 0, 1), new r(1, 0, -1), new r(-1, 0, -1), new r(0, 1, 1), new r(0, -1, 1), new r(0, 1, -1), new r(0, -1, -1)], c = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180]; !(function (e) { e > 0 && e < 1 && (e *= 65536), (e = Math.floor(e)) < 256 && (e |= e << 8); for (var t = 0; t < 256; t++) { var n = void 0; n = 1 & t ? c[t] ^ 255 & e : c[t] ^ e >> 8 & 255, u[t] = u[t + 256] = n, i[t] = i[t + 256] = f[n % 12]; } }(0)), n.default = function (e, t) { var n, r, f = (e + t) * o, c = Math.floor(e + f), y = Math.floor(t + f), s = (c + y) * a, d = e - c + s, l = t - y + s; d > l ? (n = 1, r = 0) : (n = 0, r = 1); var p = d - n + a, h = l - r + a, x = d - 1 + 2 * a, v = l - 1 + 2 * a, m = i[(c &= 255) + u[y &= 255]], w = i[c + n + u[y + r]], M = i[c + 1 + u[y + 1]], g = 0.5 - d * d - l * l, E = 0.5 - p * p - h * h, A = 0.5 - x * x - v * v; return 70 * ((g < 0 ? 0 : (g *= g) * g * m.dot2(d, l)) + (E < 0 ? 0 : (E *= E) * E * w.dot2(p, h)) + (A < 0 ? 0 : (A *= A) * A * M.dot2(x, v))); }; }, {}], 4: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', {value: !0}), (function (e) { function t (e, t) { return {x: typeof e == 'number' ? e : 0, y: typeof t == 'number' ? t : 0}; } function n (e) { return Math.sqrt(e.x * e.x + e.y * e.y); } function r (e, t, r) { var o = n(e); o > 0 ? (o = t / o, r.x = e.x * o, r.y = e.y * o) : (r.x = t, r.y = 0); } function o (e, t) { return e.x * t.x + e.y * t.y; }e.create = t, e.clone = function (e) { return t(e.x, e.y); }, e.set = function (e, t, n) { e.x = t, e.y = n; }, e.copy = function (e, t) { t.x = e.x, t.y = e.y; }, e.length = n, e.setLength = r, e.dist = function (e, t) { var n = t.x - e.x, r = t.y - e.y; return Math.sqrt(n * n + r * r); }, e.normalize = function (e, t) { r(e, 1, t); }, e.dot = o, e.det = function (e, t) { return e.x * t.y - e.y * t.x; }, e.rotate = function (e, t, n) { var r = Math.cos(t), o = Math.sin(t), a = e.x, u = e.y; n.x = a * r - u * o, n.y = a * o + u * r; }, e.rotateCS = function (e, t, n, r) { var o = e.x, a = e.y; r.x = o * t - a * n, r.y = o * n + a * t; }, e.reflect = function (e, t, n) { var r = o(t, e); n.x = e.x - 2 * r * t.x, n.y = e.y - 2 * r * t.y; }, e.toArray = function (e) { return [e.x, e.y]; }; }(n.Vec2 || (n.Vec2 = {}))), (function (e) { function t (e, t, n) { return {x: typeof e == 'number' ? e : 0, y: typeof t == 'number' ? t : 0, z: typeof n == 'number' ? n : 0}; } function n (e) { return Math.sqrt(e.x * e.x + e.y * e.y + e.z * e.z); }e.create = t, e.clone = function (e) { return t(e.x, e.y, e.z); }, e.set = function (e, t, n, r) { e.x = t, e.y = n, e.z = r; }, e.copy = function (e, t) { t.x = e.x, t.y = e.y, t.z = e.z; }, e.length = n, e.setLength = function (e, t, r) { var o = n(e); o > 0 ? (o = t / o, r.x = e.x * o, r.y = e.y * o, r.z = e.z * o) : (r.x = t, r.y = 0, r.z = 0); }, e.dist = function (e, t) { var n = t.x - e.x, r = t.y - e.y, o = t.z - e.z; return Math.sqrt(n * n + r * r + o * o); }, e.normalize = function (t, n) { e.setLength(t, 1, n); }, e.dot = function (e, t) { return e.x * t.x + e.y * t.y + e.z * t.z; }, e.cross = function (e, t, n) { var r = e.x, o = e.y, a = e.z, u = t.x, i = t.y, f = t.z; n.x = o * f - a * i, n.y = a * u - r * f, n.z = r * i - o * u; }, e.toArray = function (e) { return [e.x, e.y, e.z]; }; }(n.Vec3 || (n.Vec3 = {}))), (function (e) { e.create = function (e, t, n) { return {r: typeof e == 'number' ? e : 0, g: typeof t == 'number' ? t : 0, b: typeof n == 'number' ? n : 0}; }, e.toArray = function (e) { return [e.r, e.g, e.b]; }, e.to24bit = function (e) { return 255 * e.r << 16 ^ 255 * e.g << 8 ^ 255 * e.b << 0; }; }(n.Color || (n.Color = {}))); }, {}]}, {}, [2]))(2); }));
